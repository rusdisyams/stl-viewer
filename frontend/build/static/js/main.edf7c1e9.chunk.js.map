{"version":3,"sources":["components/Footer.js","components/Header.js","screens/HomeScreen.js","screens/ModelScreen.js","screens/UploadScreen.js","components/STL.js","App.js","index.js"],"names":["Footer","Container","Row","Col","className","Header","fluid","Navbar","bg","expand","Brand","href","HomeScreen","loadingModel","getIdModel","uploadModel","useState","models","setModels","useEffect","a","axios","get","data","fetchModels","Button","variant","size","onClick","map","model","sm","md","lg","xl","Card","_id","name","ModelScreen","modelName","url","xs","to","target","style","color","UploadScreen","marginBottom","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","up","set","controls","useRef","useFrame","state","current","update","ref","args","enablePan","STL","material","THREE","vertexColors","shininess","useMemo","useLoader","STLLoader","center","StlLoader","sphere","setFromObject","getBoundingSphere","radius","position","copy","clone","add","far","updateProjectionMatrix","object","dispose","attach","Loader","progress","useProgress","Html","App","isLoadModel","setIsLoadModel","isUpload","setIsUpload","idModel","setIdModel","heightCanvas","setHeightCanvas","setModelName","modelUrl","setModelUrl","fetchModel","isLoadFromChild","heightFromChild","idFromChild","uploadFromChild","getUrlUpload","urlFromChild","Form","Group","File","accept","type","onChange","e","event","files","URL","createObjectURL","height","Body","intensity","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edf7c1e9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Footer</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Navbar, Container } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Container fluid='md'>\r\n        <Navbar bg='light' expand='lg'>\r\n          <Navbar.Brand href='/'>\r\n            <h3>STL Viewer</h3>\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n      </Container>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Container, Button, Card } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nconst HomeScreen = ({ loadingModel, getIdModel, uploadModel }) => {\r\n  const [models, setModels] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchModels = async () => {\r\n      const { data } = await axios.get('/api/models')\r\n      setModels(data)\r\n    }\r\n    fetchModels()\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <p>My uploaded STL Files:</p>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button\r\n            variant='primary'\r\n            size='sm'\r\n            onClick={() => uploadModel(true, 0)}\r\n          >\r\n            View 3D Model From Local Drive\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {models.map((model) => (\r\n          <Col key={model._id} sm={12} md={6} lg={4} xl={3}>\r\n            <Card className='my-3 p-3 rounded'>\r\n              <Button\r\n                variant='secondary'\r\n                size='sm'\r\n                onClick={() => {\r\n                  loadingModel(true, 420)\r\n                  getIdModel(model._id)\r\n                }}\r\n              >\r\n                {model.name}\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\nimport { Button, Card, Col, Row } from 'react-bootstrap'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ModelScreen = ({ loadingModel, modelName, url }) => {\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Row>\r\n          <Col>\r\n            <Button\r\n              variant='secondary'\r\n              size='sm'\r\n              onClick={() => {\r\n                loadingModel(false, 0)\r\n              }}\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </Col>\r\n          <Col xs={5} className='text-center'>\r\n            <h5>{modelName}</h5>\r\n          </Col>\r\n          <Col className='text-right'>\r\n            <Button variant='primary' size='sm'>\r\n              <Link to={url} target='_blank' style={{ color: 'white' }}>\r\n                Download\r\n              </Link>\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Header>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ModelScreen\r\n","import React from 'react'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\n\r\nconst UploadScreen = ({ uploadModel, getIdModel }) => {\r\n  return (\r\n    <>\r\n      <Row style={{ marginBottom: '20px' }}>\r\n        <Col>\r\n          <Button\r\n            variant='secondary'\r\n            size='sm'\r\n            onClick={() => {\r\n              uploadModel(false, 0)\r\n              getIdModel(0)\r\n            }}\r\n          >\r\n            Go Back\r\n          </Button>\r\n        </Col>\r\n        <Col xs='auto'>\r\n          <h5>View Local STL File</h5>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UploadScreen\r\n","import React, { useRef, useEffect, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useLoader, useThree, useFrame, extend } from '@react-three/fiber'\r\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\n\r\nextend({ OrbitControls })\r\n\r\nconst CameraControls = () => {\r\n  const {\r\n    camera,\r\n    gl: { domElement },\r\n  } = useThree()\r\n  camera.up.set(0, 0, 1)\r\n\r\n  const controls = useRef()\r\n\r\n  useFrame((state) => controls.current.update())\r\n\r\n  return (\r\n    <orbitControls\r\n      ref={controls}\r\n      args={[camera, domElement]}\r\n      enablePan={false}\r\n    />\r\n  )\r\n}\r\n\r\nconst StlLoader = (url) => {\r\n  const model = useLoader(STLLoader, url)\r\n  model.center()\r\n  return model\r\n}\r\n\r\nconst STL = ({ url }) => {\r\n  const material = new THREE.MeshPhongMaterial({\r\n    vertexColors: true,\r\n    shininess: 10,\r\n  })\r\n\r\n  const model = useMemo(() => StlLoader(url), [url])\r\n  const ref = useRef()\r\n\r\n  const { camera } = useThree()\r\n\r\n  useEffect(() => {\r\n    const bbox = new THREE.Box3().setFromObject(ref.current)\r\n    const sphere = bbox.getBoundingSphere(new THREE.Sphere())\r\n    const { center, radius } = sphere\r\n\r\n    camera.position.copy(\r\n      center.clone().add(new THREE.Vector3(2.0 * radius, 0, 0))\r\n    )\r\n    camera.far = 500 * radius\r\n    camera.updateProjectionMatrix()\r\n  }, [camera, url])\r\n\r\n  return (\r\n    <>\r\n      <CameraControls />\r\n      <primitive object={new THREE.AxesHelper(15)} />\r\n      <mesh ref={ref} dispose={null}>\r\n        <primitive object={model} attach='geometry' />\r\n        <meshPhongMaterial color={0xe0740d} material={material} />\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default STL\r\n","import React, { useState, useEffect, Suspense } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Container, Card, Form } from 'react-bootstrap'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport ModelScreen from './screens/ModelScreen'\nimport UploadScreen from './screens/UploadScreen'\n\nimport axios from 'axios'\nimport { Canvas } from '@react-three/fiber'\nimport { useProgress, Html } from '@react-three/drei'\nimport STL from './components/STL'\n\nfunction Loader() {\n  const { progress } = useProgress()\n  return <Html center>{progress} % loaded</Html>\n}\n\nconst App = () => {\n  const [isLoadModel, setIsLoadModel] = useState(false)\n  const [isUpload, setIsUpload] = useState(false)\n  const [idModel, setIdModel] = useState(0)\n  const [heightCanvas, setHeightCanvas] = useState(0)\n\n  const [modelName, setModelName] = useState('')\n  const [modelUrl, setModelUrl] = useState('')\n  //const [name, setName] = useState(false)\n  //const [disable, setDisable] = useState(false)\n\n  useEffect(() => {\n    if (idModel > 0) {\n      const fetchModel = async () => {\n        const { data } = await axios.get(`/api/models/${idModel}`)\n        setModelName(data.name)\n        setModelUrl(data.url)\n      }\n      fetchModel()\n    }\n  }, [idModel])\n\n  const loadingModel = (isLoadFromChild, heightFromChild) => {\n    setIsLoadModel(isLoadFromChild)\n    setHeightCanvas(heightFromChild)\n  }\n\n  const getIdModel = (idFromChild) => {\n    setIdModel(idFromChild)\n  }\n\n  const uploadModel = (uploadFromChild, heightFromChild) => {\n    setIsUpload(uploadFromChild)\n    setHeightCanvas(heightFromChild)\n    //setDisable(false)\n    //setName(false)\n  }\n\n  const getUrlUpload = (urlFromChild, heightFromChild) => {\n    setModelUrl(urlFromChild)\n    setHeightCanvas(heightFromChild)\n  }\n\n  const getUrlFile = (event) => {\n    if (event.target.files[0] !== '') {\n      //setDisable(true)\n      setModelUrl(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n\n  // const getName = (event) => {\n  //   setName(true)\n  // }\n\n  // const uploadHandler = (event) => {\n  //   const data = new FormData()\n  //   data.append('file', 'modelUrl')\n  //   axios\n  //     .post('http://localhost:3000/upload', data, {\n  //       // receive two    parameter endpoint url ,form data\n  //     })\n  //     .then((res) => {\n  //       // then print response status\n  //       console.log(res.statusText)\n  //     })\n  // }\n\n  //const [modelName, modelUrl] = useFetchModel(idModel)\n\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          {!isUpload && !isLoadModel && (\n            <HomeScreen\n              loadingModel={loadingModel}\n              getIdModel={getIdModel}\n              uploadModel={uploadModel}\n            />\n          )}\n          {isLoadModel && (\n            <ModelScreen\n              loadingModel={loadingModel}\n              modelName={modelName}\n              url={modelUrl}\n            />\n          )}\n          {isUpload && (\n            <>\n              <Card.Header>\n                <UploadScreen\n                  uploadModel={uploadModel}\n                  getUrlUpload={getUrlUpload}\n                  getIdModel={getIdModel}\n                />\n                <Form.Group>\n                  <Form.File\n                    accept='.stl'\n                    type='file'\n                    onChange={(e) => {\n                      getUrlFile(e)\n                      setHeightCanvas(320)\n                    }}\n                  />\n\n                  {/* <InputGroup size='sm' className='mb-3'>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text id='inputGroup-sizing-sm'>\n                        Name of the Model\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      aria-label='Small'\n                      aria-describedby='inputGroup-sizing-sm'\n                      onChange={getName}\n                    />\n                  </InputGroup> */}\n\n                  {/* <Button\n                    type='submit'\n                    variant='primary'\n                    size='sm'\n                    block\n                    onClick={uploadHandler}\n                  >\n                    Upload\n                  </Button> */}\n                </Form.Group>\n              </Card.Header>\n            </>\n          )}\n\n          <Card style={{ height: heightCanvas }}>\n            <Card.Body>\n              <Canvas>\n                <ambientLight intensity={0.2} />\n                <directionalLight\n                  intensity={0.6}\n                  position={[0, 30, 30]}\n                  color='white'\n                />\n                <directionalLight\n                  intensity={0.6}\n                  position={[0, -30, -30]}\n                  color='white'\n                />\n\n                <Suspense fallback={<Loader />}>\n                  <STL url={modelUrl} />\n                </Suspense>\n              </Canvas>\n            </Card.Body>\n          </Card>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}